<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Fluent="clr-namespace:Fluent">
  <Style x:Key="InRibbonGalleryButton" TargetType="{x:Type Fluent:Button}">
  	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type Fluent:Button}">
				<Border BorderBrush="#FFC6CACD" BorderThickness="1,1,1,1" x:Name="border">
					<Border.Background>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFFFFFFF" Offset="0"/>
							<GradientStop Color="#FFF1F3F4" Offset="1"/>
						</LinearGradientBrush>
					</Border.Background>
					<Border BorderThickness="1,1,1,1" x:Name="border1">
						<Grid>
							<Path Margin="0,6,0,0" VerticalAlignment="Top" Height="1" Fill="#FFFFFFFF" Stretch="Fill" Stroke="#FF000000" Data="M0,0L1,0" HorizontalAlignment="Center" Width="7"/>
							<Path Margin="0,8,0,0" VerticalAlignment="Top" Height="3" Fill="#FF000000" Stretch="Fill" Stroke="#FF000000" Data="M0,0L1,1 2,0z" Width="5" HorizontalAlignment="Center" StrokeThickness="0"/>
						</Grid>
					</Border>
				</Border>
				<ControlTemplate.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsMouseOver" Value="True"/>
							<Condition Property="IsPressed" Value="False"/>
						</MultiTrigger.Conditions>
						<Setter Property="Background" TargetName="border" Value="{DynamicResource TransparentBrush}"/>
						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
						<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"/>
						<Setter Property="Background" TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
					</MultiTrigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
						<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource ButtonPressedInnerBorderBrush}"/>
						<Setter Property="Background" TargetName="border1" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
  </Style>
  <Style x:Key="InRibbonGalleryRepeatButton" TargetType="{x:Type RepeatButton}">
  	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type RepeatButton}">
				<Border BorderBrush="#FFC6CACD" BorderThickness="1,1,1,1" x:Name="border">
					<Border.Background>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="#FFFFFFFF" Offset="0"/>
							<GradientStop Color="#FFF1F3F4" Offset="1"/>
						</LinearGradientBrush>
					</Border.Background>
					<Border BorderThickness="1,1,1,1" x:Name="border1">
						<ContentPresenter/>
					</Border>
				</Border>
				<ControlTemplate.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsMouseOver" Value="True"/>
							<Condition Property="IsPressed" Value="False"/>
						</MultiTrigger.Conditions>
						<Setter Property="Background" TargetName="border" Value="{DynamicResource TransparentBrush}"/>
						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
						<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource ButtonHoverInnerBorderBrush}"/>
						<Setter Property="Background" TargetName="border1" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
					</MultiTrigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
						<Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource ButtonPressedInnerBorderBrush}"/>
						<Setter Property="Background" TargetName="border1" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
  </Style>
  <Style x:Key="{x:Type Fluent:InRibbonGallery}" TargetType="{x:Type Fluent:InRibbonGallery}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Fluent:InRibbonGallery}">
        	<Border Width="Auto" Height="60" BorderThickness="1,1,1,1" CornerRadius="0,1,1,0" BorderBrush="#FFC6CACD" ClipToBounds="True" Margin="0,4,0,0">
        		<Grid Width="Auto" Height="Auto">
              <Fluent:RibbonListBox
                x:Name="PART_ListBox"
                      DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                      ItemBindingGroup="{TemplateBinding ItemBindingGroup}"
                      ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                      ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                      ItemStringFormat="{TemplateBinding ItemStringFormat}"
                      ItemTemplate="{TemplateBinding ItemTemplate}"
                      ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                      IsTextSearchEnabled="{TemplateBinding IsTextSearchEnabled}"
                      ItemsSource="{TemplateBinding ItemsSource}"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0,0,0,0"                      
                  >
				<Fluent:RibbonListBox.Resources>
					<Style TargetType="{x:Type ScrollBar}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
									<StackPanel HorizontalAlignment="Right" Margin="0,-1,-1,0">
										<RepeatButton Width="15" Height="21" Command="ScrollBar.PageUpCommand" Margin="0,-1,-1,0" Style="{DynamicResource InRibbonGalleryRepeatButton}">
                      <Path RenderOptions.EdgeMode="Aliased" Data="M0,0 L1,-1 2,0z" Fill="Black" Width="5" Height="3" Stretch="Fill"/>
										</RepeatButton>
										<RepeatButton Width="15" Height="21" Command="ScrollBar.PageDownCommand" Margin="0,-1,-1,0" Style="{DynamicResource InRibbonGalleryRepeatButton}">
                      <Path RenderOptions.EdgeMode="Aliased" Data="M0,0 L1,1 2,0z" Fill="Black" Width="5" Height="3" Stretch="Fill"/>
                    </RepeatButton>
									</StackPanel>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Fluent:RibbonListBox.Resources>
                <Fluent:RibbonListBox.ItemsPanel>
                  <ItemsPanelTemplate>
                    <WrapPanel />
                  </ItemsPanelTemplate>
                </Fluent:RibbonListBox.ItemsPanel>
              </Fluent:RibbonListBox>
        			<Fluent:Button HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="15" Height="20" x:Name="PART_ExpandButton" Style="{DynamicResource InRibbonGalleryButton}" Margin="0,0,-1,-1"/>
        		</Grid>
        	</Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsSource" Value="{x:Null}">
              <Setter Property="ItemsSource" TargetName="PART_ListBox" Value="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsOpen" Value="True">
              <Setter Property="ItemsSource" TargetName="PART_ListBox" Value="{x:Null}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>