<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Fluent="clr-namespace:Fluent" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
    <Style x:Key="QuickAccessToolbarStyle" TargetType="{x:Type Fluent:QuickAccessToolbar}">
    	<Setter Property="Template" Value="{DynamicResource QuickAccessToolbarControlTemplate}"/>
    </Style>
    <ControlTemplate x:Key="QuickAccessToolbarControlTemplate" TargetType="{x:Type Fluent:QuickAccessToolbar}">
    	<DockPanel>
    		<Fluent:DropDownButton x:Name="PART_MenuDownButton" Width="13" Text="M" HorizontalAlignment="Right" VerticalAlignment="Stretch" Style="{DynamicResource RibbonDropDownButtonStyle}" Height="22" Fluent:RibbonControl.SizeDefinition="Small" DockPanel.Dock="Right">
			
			
    				
						<ContentControl x:Name="menuContentControl">
							<Menu x:Name="quickAccessMenu" Style="{DynamicResource ContextPopupMenuStyle}">
								<Fluent:GroupSeparator Style="{DynamicResource MenuGroupSeparatorStyle}" Text="Customize Quick Access Toolbar"/>
								<MenuItem Style="{DynamicResource ContentMenuItemStyle}" Header="MenuItem"/>
								<Separator Style="{DynamicResource MenuSeparatorStyle}"/>
								<MenuItem Style="{DynamicResource ContentMenuItemStyle}" Header="MenuItem"/>
								<MenuItem x:Name="PART_ShowBelow" Style="{DynamicResource ContentMenuItemStyle}" Header="Show Below the Ribbon" Margin="0"/>
								<MenuItem x:Name="PART_ShowAbove" Style="{DynamicResource ContentMenuItemStyle}" Header="Show Above the Ribbon" Visibility="Collapsed"/>
							</Menu>
							</ContentControl>
					
    		</Fluent:DropDownButton>
    		<Fluent:DropDownButton x:Name="PART_ToolbarDownButton" HorizontalAlignment="Right" Width="13" Visibility="Collapsed" VerticalAlignment="Stretch" Style="{DynamicResource RibbonDropDownButtonStyle}" Height="22" Fluent:RibbonControl.SizeDefinition="Small" DockPanel.Dock="Right">
			
			  				
    				<Border HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" BorderThickness="1" BorderBrush="#FFB6BABF" Background="#FFE9EDF1" Height="28">
    					<StackPanel Orientation="Horizontal" Background="{x:Null}" Width="Auto" Height="Auto" Margin="1">
    						<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" HorizontalAlignment="Left" Width="Auto" Height="Auto"/>
    						<Fluent:DropDownButton x:Name="PART_MenuDownPopupButton" Width="13" HorizontalAlignment="Right" VerticalAlignment="Stretch" Style="{DynamicResource RibbonDropDownButtonStyle}" Height="22">

						
						
    						
    							<ContentControl x:Name="popupContentControl"/>
    						
							
    					</Fluent:DropDownButton>
    					</StackPanel>
    				</Border>
    			
    		</Fluent:DropDownButton>
    		<Rectangle Fill="Black" Stroke="White" RadiusX="1" RadiusY="1" HorizontalAlignment="Right" Width="3" Height="Auto" Opacity="0.5" VerticalAlignment="Stretch" DockPanel.Dock="Right"/>
    		<Rectangle Fill="Black" Stroke="White" Width="3" Height="Auto" RadiusX="1" RadiusY="1" HorizontalAlignment="Left" Opacity="0.5" VerticalAlignment="Stretch" DockPanel.Dock="Left"/>
    		<ToolBarPanel x:Name="PART_ToolBarPanel" Width="Auto" Height="Auto" IsItemsHost="True" VerticalAlignment="Stretch"/>    		  		
    	</DockPanel>
    	<ControlTemplate.Triggers>
    		<Trigger Property="ShowAboveRibbon" Value="False">
    			<Setter Property="Visibility" TargetName="PART_ShowBelow" Value="Collapsed"/>
    			<Setter Property="Visibility" TargetName="PART_ShowAbove" Value="Visible"/>
    		</Trigger>
    		<Trigger Property="HasOverflowItems" Value="True">
    			<Setter Property="Visibility" TargetName="PART_ToolbarDownButton" Value="Visible"/>
    			<Setter Property="Visibility" TargetName="PART_MenuDownButton" Value="Collapsed"/>
    			<Setter Property="Content" TargetName="popupContentControl" Value="{Binding ElementName=quickAccessMenu, Mode=OneWay}"/>
    			<Setter Property="Content" TargetName="menuContentControl" Value="{x:Null}"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>